[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Henok Dawite",
    "section": "",
    "text": "I am pursuing a BA in Computer Science from Pomona College. I am learning to apply computational thinking and programming skills to solve complex problems and have a passion for technology and innovation. I am fluent in Amharic and English, have limited proficiency in Spanish, and enjoy learning new languages and cultures. I am a driven, adaptable, and collaborative individual who values teamwork, creativity, and excellence."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Valentines Day Gifts.html",
    "href": "Valentines Day Gifts.html",
    "title": "Valentines Day Gifts",
    "section": "",
    "text": "Attaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union"
  },
  {
    "objectID": "Meteorite falls.html",
    "href": "Meteorite falls.html",
    "title": "Meteorite falls",
    "section": "",
    "text": "suppressMessages(library(ggplot2))\nsuppressMessages(library(dplyr))\n\n# Load dataset\nmeteorites &lt;- read.csv(\"meteorites.csv\")\n\n# Data preparation\nmeteorites_clean &lt;- meteorites |&gt;\n  filter(!is.na(fall)) |&gt;\n  group_by(fall) |&gt;\n  summarise(count = n(), .groups = 'drop')\n\n# Plot\nggplot(meteorites_clean, aes(x = fall, y = count, fill = fall)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Meteorite Falls vs. Finds\",\n       x = \"Event Type (Fall = Observed Fall, Find = Later Discovery)\",\n       y = \"Number of Meteorites\") +\n  theme_minimal()"
  },
  {
    "objectID": "Project 2.html",
    "href": "Project 2.html",
    "title": "Analysis of Netflix Movies and TV Shows",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(stringr)\nlibrary(ggplot2)\n\n# Load the dataset\nnetflix_data &lt;- read.csv(\"netflix_titles 2.csv\", stringsAsFactors = FALSE)\n\n# Data Cleaning\nnetflix_data &lt;- netflix_data %&gt;%\n  mutate(\n    date_added = as.Date(date_added, format=\"%B %d, %Y\"),\n    title = as.character(title)\n  )\n\n\n# Extract year from date_added for visualization\nnetflix_data$year_added &lt;- str_extract(netflix_data$date_added, \"\\\\d{4}\")\n\nnetflix_data_clean &lt;- netflix_data %&gt;% filter(!is.na(year_added))\n\n# Number of titles per year\np1 &lt;- ggplot(netflix_data_clean, aes(x = year_added)) +\n  geom_bar(fill = \"steelblue\", color = \"black\", width = 0.8) +\n  labs(title = \"Number of Titles Added Per Year\", x = \"Year\", y = \"Count\")\n\nThis is a bar chart that indicates how many titles were added to the Netflix library each year. If we determine that more titles were added one year than the next, we can deduce whether Netflix was in a position to try to reduce titles at one point due to business constraints or, conversely, in a stable position to assess market forces or consumer demand and expand availability.\n\n# Count the number of words in each description for visualization\nnetflix_data$word_count &lt;- str_count(netflix_data$description, \"\\\\w+\")\n\n# Average word count in description by type\np2 &lt;- ggplot(netflix_data, aes(x = type, y = word_count, fill = type)) +\n  geom_boxplot() +\n  labs(title = \"Word Count in Description by Type\", x = \"Type\", y = \"Word Count\") +\n  scale_fill_brewer(palette = \"Set3\")\n\nThis box plot displays the distribution of word counts in content descriptions, categorized by the types that are movies and TV shows.\n\n# Split titles into words and count most common words\nnetflix_data$word_after_the &lt;- str_extract(netflix_data$title, \"(?&lt;=The )\\\\w+\")\n\nword_after_the_counts &lt;- netflix_data$word_after_the %&gt;%\n  na.omit() %&gt;%                 \n  table() %&gt;%                   \n  as.data.frame() %&gt;%\n  rename(word = \".\", count = \"Freq\") %&gt;%\n  arrange(desc(count)) %&gt;%\n  head(10)                             \n\np3 &lt;- ggplot(word_after_the_counts, aes(x = reorder(word, count), y = count, fill = count)) +\n  geom_bar(stat = \"identity\", color = \"black\") +\n  coord_flip() +\n  labs(title = \"Top 10 Words Following 'The' in Netflix Titles\", x = \"Word\", y = \"Count\") +\n  scale_fill_gradient(low = \"moccasin\", high = \"darkorange\") +\n  theme(legend.position = \"none\")"
  }
]